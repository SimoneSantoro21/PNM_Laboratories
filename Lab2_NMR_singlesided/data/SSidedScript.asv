%%
CPMG1 = readtable('CPMG (1)\data.csv');
CPMG2 = readtable('CPMG (2)\data.csv');
CPMG3 = readtable('CPMG (3)\data.csv');
figure
hold on
name="CPMG 1"
mdlT1_trans = fitlm(CPMG1{:,"Var1"},log(CPMG1{:,"Var2"})) %CPMG(1), time is in microseconds
T1_trans=(1/(-1*mdlT1_trans.Coefficients.Estimate(2)))*10^-03; % T2 in MILLISECONDS (1)
T1_trans(1,2) = abs((mdlT1_trans.Coefficients.SE(2)/mdlT1_trans.Coefficients.Estimate(2))*(1/(-1*mdlT1_trans.Coefficients.Estimate(2)))*10^-03);
M01_trans=exp(mdlT1_trans.Coefficients.Estimate(1));
plot(mdlT1_trans)


hold off 
figure
hold on
name="CPMG 2"
mdlT2_trans = fitlm(CPMG2{:,"Var1"},log(CPMG2{:,"Var2"})) %CPMG(2)
T2_trans=(1/(-1*mdlT2_trans.Coefficients.Estimate(2)))*10^-03;
T2_trans(1,2) = abs((mdlT2_trans.Coefficients.SE(2)/mdlT2_trans.Coefficients.Estimate(2))*(1/(-1*mdlT2_trans.Coefficients.Estimate(2)))*10^-03);
M02_trans=exp(mdlT2_trans.Coefficients.Estimate(1));
plot(mdlT2_trans)

hold off
figure
hold on
name="CPMG 3"
mdlT3_trans = fitlm(CPMG3{:,"Var1"},log(CPMG3{:,"Var2"})) %CPMG(3)
T3_trans=(1/(-1*mdlT3_trans.Coefficients.Estimate(2)))*10^-03;
T3_trans(1,2) = abs((mdlT3_trans.Coefficients.SE(2)/mdlT3_trans.Coefficients.Estimate(2))*(1/(-1*mdlT3_trans.Coefficients.Estimate(2)))*10^-03);
M03_trans=exp(mdlT3_trans.Coefficients.Estimate(1));
plot(mdlT3_trans)
%% 
SSE1 = readtable('SSE (1)\data.dat');
SSE2 = readtable('SSE (2)\data.dat');
SSE3 = readtable('SSE (3)\data.dat');

g = 14; % mouse gradient, T/m
gamma = 42.576 * 10^6; % gyromag ratio of 1H, Hz/T
delta = 1; % ms, diffusion time

figure
hold on
name="SSE 1"
x_axis = (gamma)^2*(g^2)*((SSE1{:,"Var1"}.*10^-3).^2).*((2/3)*(SSE1{:,"Var1"}.*10^-3) + delta*10^-3); % x variable, norm signal is linearly proportional to it
signal = log(SSE1{:,"Var2"}/SSE1{1,"Var2"}); %normalized signal
mdlD1 = fitlm(x_axis,signal,'y~x1-1') 
D1=mdlD1.Coefficients.Estimate(1); %  in MILLISECONDS (1)
D1(1,2) = mdlD1.Coefficients.SE(1);
plot(mdlD1)

hold off

figure
hold on
name="SSE 2"
x_axis = (gamma)^2*(g^2)*((SSE2{:,"Var1"}.*10^-3).^2).*((2/3)*(SSE2{:,"Var1"}.*10^-3) + delta*10^-3); % x variable, norm signal is linearly proportional to it
signal = log(SSE2{:,"Var2"}/SSE2{1,"Var2"}); %normalized signal
mdlD2 = fitlm(x_axis,signal,'y~x1-1') 
D2=mdlD2.Coefficients.Estimate(1); %  in MILLISECONDS (1)
D2(1,2) = mdlD2.Coefficients.SE(1);
plot(mdlD2)

hold off

figure
hold on
name="SSE 3"
x_axis = (gamma)*((SSE3{:,"Var1"}.*10^-3).^2).*((2/3)*(SSE3{:,"Var1"}.*10^-3) + delta*10^-3); % x variable, norm signal is linearly proportional to it
signal = log(SSE3{:,"Var2"}/SSE3{1,"Var2"}); %normalized signal
mdlD3 = fitlm(x_axis,signal,'y~x1-1') 
D3=mdlD3.Coefficients.Estimate(1); %  in MILLISECONDS (1)
D3(1,2) = mdlD3.Coefficients.SE(1);
plot(mdlD3)

hold off
%% 

